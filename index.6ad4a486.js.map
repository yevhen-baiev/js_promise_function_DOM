{"mappings":"ACEA,IAAI,EAAI,EAER,SAAS,EAAQ,CAAO,CAAE,CAAS,EACjC,OAAO,IAAI,QAAQ,SAAA,CAAnB,EACE,EAAQ,gBAAgB,CAAC,EAAW,WAClC,IAAQ,EAAiB,EAAjB,QAAA,CAAU,EAAO,EAAP,EAAlB,CAEA,EAAQ,UAAuC,MAAA,CAA7B,EAAU,qBAAoC,MAAA,CAAjB,EAAS,UAAW,MAAA,CAAH,EAAG,KACrE,EACF,EACF,CAEA,IAAM,EAAe,SAAC,CAAtB,EACE,GAAK,EAEL,SAAS,IAAI,CAAC,kBAAkB,CAAC,YAAc,sCACR,MAAA,CAAN,EAAE,MAAY,MAAA,CAAR,EAAQ,cAEjD,EAEM,EAAa,SAAS,cAAc,CAAC,SACrC,EAAgB,SAAS,cAAc,CAAC,YACxC,EAAS,SAAS,cAAc,CAAC,UAEvC,EAAQ,EAAY,SAAS,IAAI,CAAC,GAClC,EAAQ,EAAe,SAAS,IAAI,CAAC,GACrC,EAAQ,EAAQ,SAAS,IAAI,CAAC,GAE9B,EAAQ,EAAY,SAAS,IAAI,CAAC,GAClC,EAAQ,EAAe,SAAS,IAAI,CAAC,GAErC,EAAQ,EAAY,QAAQ,IAAI,CAAC,GACjC,EAAQ,EAAe,QAAQ,IAAI,CAAC,GACpC,EAAQ,EAAQ,QAAQ,IAAI,CAAC,E,4D","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar i = 0;\nfunction waitFor(element, eventName) {\n    return new Promise(function(resolve) {\n        element.addEventListener(eventName, function() {\n            var nodeName = element.nodeName, id = element.id;\n            resolve(\"It was \".concat(eventName, \" on the element: \").concat(nodeName, \", id: \").concat(id, \".\"));\n        });\n    });\n}\nvar printMessage = function(message) {\n    i += 1;\n    document.body.insertAdjacentHTML(\"beforeend\", '\\n    <div class=\"message message--'.concat(i, '\">').concat(message, \"</div>\\n  \"));\n};\nvar loginField = document.getElementById(\"login\");\nvar passwordField = document.getElementById(\"password\");\nvar button = document.getElementById(\"submit\");\nwaitFor(loginField, \"click\").then(printMessage);\nwaitFor(passwordField, \"click\").then(printMessage);\nwaitFor(button, \"click\").then(printMessage);\nwaitFor(loginField, \"input\").then(printMessage);\nwaitFor(passwordField, \"input\").then(printMessage);\nwaitFor(loginField, \"blur\").then(printMessage);\nwaitFor(passwordField, \"blur\").then(printMessage);\nwaitFor(button, \"blur\").then(printMessage);\n\n//# sourceMappingURL=index.6ad4a486.js.map\n","'use strict';\n\nlet i = 0;\n\nfunction waitFor(element, eventName) {\n  return new Promise(resolve => {\n    element.addEventListener(eventName, () => {\n      const { nodeName, id } = element;\n\n      resolve(`It was ${eventName} on the element: ${nodeName}, id: ${id}.`);\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  i += 1;\n\n  document.body.insertAdjacentHTML('beforeend', `\n    <div class=\"message message--${i}\">${message}</div>\n  `);\n};\n\nconst loginField = document.getElementById('login');\nconst passwordField = document.getElementById('password');\nconst button = document.getElementById('submit');\n\nwaitFor(loginField, 'click').then(printMessage);\nwaitFor(passwordField, 'click').then(printMessage);\nwaitFor(button, 'click').then(printMessage);\n\nwaitFor(loginField, 'input').then(printMessage);\nwaitFor(passwordField, 'input').then(printMessage);\n\nwaitFor(loginField, 'blur').then(printMessage);\nwaitFor(passwordField, 'blur').then(printMessage);\nwaitFor(button, 'blur').then(printMessage);\n"],"names":["i","waitFor","element","eventName","Promise","resolve","addEventListener","nodeName","id","concat","printMessage","message","document","body","insertAdjacentHTML","loginField","getElementById","passwordField","button","then"],"version":3,"file":"index.6ad4a486.js.map"}